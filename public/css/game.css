:root {
    --card-border: none;
    --wild-color-1: #acc77e;
    --wild-color-2: #ebc968;
    --wild-color-3: #428bca;
    --wild-color-4: #cb666a;
}

body {
    user-select: none;
}

.self-cards {
    position: fixed;
    left: 50%;
    bottom: 2rem;
    transform: translateX(-50%);

    height: 15rem;
    width: clamp(25rem, 45vw, 50rem);
}

@property --x {
    syntax: '<length>';
    initial-value: 0px;
    inherits: false;
}

@property --y {
    syntax: '<length>';
    initial-value: 0px;
    inherits: false;
}

@property --ang {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}

@property --raw-theta {
    syntax: '<number>';
    initial-value: 0;
    inherits: false;
}

@property --extra-radius {
    syntax: '<length>';
    initial-value: 0px;
    inherits: false;
}

.self-cards .card-container {
    --x: 0px;
    --y: 0px;
    --ang: 0deg;
    --raw-theta: 0;
    --extra-radius: 0px;
    --after-height: 0px;

    position: absolute;
    left: 50%;
    bottom: 0;

    transform: translateX(-50%) rotate(var(--ang));
    translate: calc(var(--x) + var(--extra-radius) * cos(var(--raw-theta))) calc(var(--y) - var(--extra-radius) * sin(var(--raw-theta)));

    transform-style: preserve-3d;
    perspective: 800px;
    perspective-origin: center;
    transform-origin: bottom;
    user-select: none;

    transition: --x 0.3s, --y 0.3s, --ang 0.3s, --extra-radius 0.3s;
}

.self-cards .card-container:hover {
    --extra-radius: 50px;
    --after-height: 60px;
}

.self-cards .card-container::after {
    content: '';
    position: absolute;
    top: calc(100% - 10px);
    left: 0;
    width: 100%;
    height: var(--after-height);
}

@property --rx {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}

@property --ry {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}

@property --rz {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}

.self-cards .card {
    --rx: inherit;
    --ry: inherit;
    --rz: inherit;
    user-select: none;
    box-shadow: -4px 4px 4px 3px rgba(0, 0, 0, 0.25);
    border-radius: 5pt;
    /* border: var(--font) 2pt solid; */
    border: var(--card-border);
    transform: rotateX(var(--rx)) rotateY(var(--ry)) rotateZ(var(--rz));
    height: 10rem;
    aspect-ratio: 2 / 3;

    transition: --rx 0.5s, --ry 0.5s, --rz 0.5s;
}

.self-cards .card:hover {
    transition: none;
}

.self-cards .card img {
    user-select: none;
}

.user-info {
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: auto;
    height: fit-content;
    padding: 1rem;
    border-radius: 1rem;
    display: flex;
    align-items: center;
    gap: 2rem;
}

.user-nickname {
    font-size: 26pt;
    font-weight: 900;
    padding: 0;
    margin: 0;
}

.user-icon {
    width: 5rem;
    height: 5rem;
    transform: scale(1.6367352185);
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -o-user-select: none;
    user-select: none;
}

.user-cards-count {
    background-color: var(--font);
    color: var(--font-alt);
    border-radius: 1rem;
    padding: 1rem;
    font-size: 26pt;
    font-weight: 900;
}

.table-piles {
    position: fixed;
    top: calc(75% - 15rem);
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    gap: 2rem;
}

.drawing-deck {
    position: relative;
    height: 10rem;
    aspect-ratio: 2 / 3;
    box-shadow: inset 0px 0px 4px 3px rgba(0, 0, 0, 0.25);
    border-radius: 5pt;
}

.discard-pile {
    position: relative;
    height: 10rem;
    aspect-ratio: 2 / 3;
    box-shadow: inset 0px 0px 4px 3px rgba(0, 0, 0, 0.25);
    border-radius: 5pt;
}

.drawing-deck .card {
    position: absolute;
    height: 10rem;
    aspect-ratio: 2 / 3;
    border: var(--card-border);
    border-radius: 5pt;
    box-shadow: -4px 4px 4px 3px rgba(0, 0, 0, 0.25);
}

.discard-pile .card {
    --x: inherit;
    --y: inherit;
    --ang: inherit;
    position: absolute;
    height: 10rem;
    aspect-ratio: 2 / 3;
    border: var(--card-border);
    border-radius: 5pt;
    box-shadow: -4px 4px 4px 3px rgba(0, 0, 0, 0.25);
    transform: rotate(var(--ang));
    translate: var(--x) var(--y);
}

.turns-list {
    --turn-list-height: 0px;

    display: grid;
    grid-template-columns: calc(6rem - 10px) 18rem;
    width: calc(6rem + 18rem + 2rem);
    max-height: 50vh;
    overflow-x: hidden;
    position: fixed;
    top: 0;
    right: 0;
}

.turn-indicator {
    height: fit-content;
    position: relative;
    top: 3rem;
    left: 0;
    font-size: 16pt;
    font-weight: 900;
    text-wrap: nowrap;
}

.turns-list .users-container {
    box-shadow: 10px 0 0 0 var(--font-alt);
    border-radius: 0 0 0 2rem;
    width: 18rem;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.turns-list .users-container::before {
    content: '';
    position: fixed;
    top: 0;
    right: 10px;
    height: var(--turn-list-height);
    width: calc(18rem + 2rem);
    max-height: 50vh;
    background-color: var(--font-alt);
    border-radius: 0 0 0 1rem;
}

.turns-list .player-info {
    padding: 1rem;
    display: grid;
    gap: 1rem;
    grid-template-columns: 3rem auto 2.882rem;
    align-items: center;
    position: relative;

    border-radius: 1rem;
    box-shadow: inset 0 0 5px 2px rgba(0, 0, 0, 0.25);
    transition: box-shadow 250ms ease;
}

.turns-list .player-info.turn {
    box-shadow: inset 0 0 20px 1px rgb(68, 255, 65);
}

.turns-list .player-info.away {
    box-shadow: inset 0 0 10px 1px rgb(255, 68, 65);
}

.turns-list .player-info.away .player-icon {
    filter: grayscale(1);
}

.player-info .player-icon {
    transform: scale(1.6367352185);
    width: 3rem;
    height: 3rem;
}

.player-info .player-nickname {
    font-size: 16pt;
    font-weight: 900;
    padding: 0;
    margin: 0;
}

.player-info .player-cards-count {
    font-size: 16pt;
    font-weight: 900;
    padding: 0;
    margin: 0;

    background-color: var(--font);
    color: var(--font-alt);
    border-radius: 1rem;
    padding: 1rem;
}

.wild-color-selector {
    z-index: 100;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}

.color-wheel {
    --bg-scale: 1;

    position: absolute;
    width: clamp(10rem, 15vw, 20rem);
    aspect-ratio: 0.85;

    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) skewX(-10deg);
    transform-origin: center;

    display: grid;
    gap: 0.5rem;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
}

.color-wheel:before {
    content: '';
    z-index: -1;
    position: absolute;
    top: -0.5rem;
    left: -0.5rem;

    transform: scale(var(--bg-scale));

    width: 100%;
    height: 100%;

    background-color: white;
    box-sizing: content-box;
    border: 0.5rem solid white;
    border-radius: 1.5rem;
}

.color-wheel .color {
    --scale: 1;
    scale: var(--scale);
    transition: box-shadow 250ms ease, translate 250ms ease, border 250ms ease, transform 250ms ease;
}

.color-wheel .color:hover {
    transform: scale(1.05);
    border: 1rem none;
    cursor: pointer;
}

.color-wheel .color:nth-child(1) {
    transform-origin: bottom right;
    background-color: var(--wild-color-1);
    border-radius: 1rem 0 0 0;
}

.color-wheel .color:nth-child(1):hover {
    translate: -10px -10px;
    box-shadow: 0.5rem 0.5rem 1rem rgba(0, 0, 0, 0.5);
}

.color-wheel .color:nth-child(2) {
    transform-origin: bottom left;
    background-color: var(--wild-color-2);
    border-radius: 0 1rem 0 0;
}

.color-wheel .color:nth-child(2):hover {
    translate: 10px -10px;
    box-shadow: -0.5rem 0.5rem 1rem rgba(0, 0, 0, 0.5);
}

.color-wheel .color:nth-child(3) {
    transform-origin: top right;
    background-color: var(--wild-color-3);
    border-radius: 0 0 0 1rem;
}

.color-wheel .color:nth-child(3):hover {
    translate: -10px 10px;
    box-shadow: 0.5rem -0.5rem 1rem rgba(0, 0, 0, 0.5);
}

.color-wheel .color:nth-child(4) {
    transform-origin: top left;
    background-color: var(--wild-color-4);
    border-radius: 0 0 1rem 0;
}

.color-wheel .color:nth-child(4):hover {
    translate: 10px 10px;
    box-shadow: -0.5rem -0.5rem 1rem rgba(0, 0, 0, 0.5);
}

.backdrop {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    box-shadow: 0 0 200px rgba(0, 0, 0, 0.9) inset;
}